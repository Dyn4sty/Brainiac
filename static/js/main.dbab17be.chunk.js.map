{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","particlesOptions.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","style","display","justifyContent","className","onClick","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","backgroundColor","FaceRecognition","imageUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","Signin","htmlFor","name","required","value","Register","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","Swal","fire","route","Fragment","params","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbab17be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.6afe8ffa.png\";","import React from 'react'\r\n\r\nconst Navigation = ({onRouteChange}) => {\r\n    return(\r\n        <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className=\"f3-l link dib pa3 ph4-l pointer black-80 \" onClick= { () => onRouteChange('signin') }> Sign Out</p>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0 center'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 70 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3 \">\r\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit}) => {\r\n  return (\r\n    <div>\r\n      <p className='f3 center'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='center ma2 pa4 br3 shadow-5' style={{width: '800px'}}>\r\n          <input className='f4 center pa2 w-70 ' type='text' onChange = {onInputChange} />\r\n          <button\r\n            className='w-30 grow f4 link ph3 pv2 dib white'\r\n            style={{backgroundColor: '#f7797d'}}\r\n            onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","const particlesOptions = {\r\n    particles: {\r\n      \"number\": {\r\n        \"value\": 150,\r\n        \"density\": {\r\n            \"enable\": true,\r\n            \"value_area\": 1803.4120608655228\r\n        }\r\n    },\r\n    \"color\": {\r\n        \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n            \"width\": 2,\r\n            \"color\": \"#fffff\"\r\n        },\r\n        \"polygon\": {\r\n            \"nb_sides\": 4\r\n        },\r\n        \"image\": {\r\n            \"src\": \"img/github.svg\",\r\n            \"width\": 100,\r\n            \"height\": 100\r\n        }\r\n    },\r\n    \"opacity\": {\r\n        \"value\": 0.4008530152163807,\r\n        \"random\": false,\r\n        \"anim\": {\r\n            \"enable\": false,\r\n            \"speed\": 1,\r\n            \"opacity_min\": 0.1,\r\n            \"sync\": false\r\n        }\r\n    },\r\n    \"size\": {\r\n        \"value\": 1.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n            \"enable\": false,\r\n            \"speed\": 40,\r\n            \"size_min\": 0.1,\r\n            \"sync\": false\r\n        }\r\n    },\r\n    \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 0,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.3687847739990702,\r\n        \"width\": 0.6413648243462091\r\n    },\r\n    \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 6,\r\n        \"direction\": \"none\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n            \"enable\": false,\r\n            \"rotateX\": 600,\r\n            \"rotateY\": 1200\r\n        }\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"window\",\r\n    \"events\": {\r\n        \"onhover\": {\r\n            \"enable\": true,\r\n            \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n            \"enable\": false,\r\n            \"mode\": \"bubble\"\r\n        },\r\n        \"resize\": true\r\n    },\r\n    \"modes\": {\r\n        \"grab\": {\r\n            \"distance\": 400,\r\n            \"line_linked\": {\r\n                \"opacity\": 1\r\n            }\r\n        },\r\n        \"bubble\": {\r\n            \"distance\": 400,\r\n            \"size\": 40,\r\n            \"duration\": 2,\r\n            \"opacity\": 8,\r\n            \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n            \"distance\": 100,\r\n            \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n            \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n            \"particles_nb\": 2\r\n        }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n  }\r\n\r\nexport default particlesOptions","import React from 'react'\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n    return(\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                  <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                  <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input \r\n                        className=\"pa2 ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\" required/>\r\n                  </div>\r\n                  <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\" required/>\r\n                  </div>\r\n                </fieldset>\r\n                <div className=\"center\">\r\n                  <input\r\n                  onClick= { () => onRouteChange('home') }\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                  type=\"submit\" \r\n                  value=\"Sign in\"/>\r\n                </div>\r\n                <div className=\"lh-copy mt3 center\">\r\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n              </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\n\r\nexport default Signin","import React from 'react'\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return(\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              onClick = {() => onRouteChange('home')}\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"Register\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Register","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\nimport Swal from 'sweetalert2'\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport particlesOptions from './particlesOptions'\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '165546baa7c245d68b76d4bb42ab8a01'\n });\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n\n    }\n  }\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState( {box: box })\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n  onButtonSubmit = () => {\n    this.setState( {imageUrl: this.state.input} )\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err=> this.setState({imageUrl: ''}) + Swal.fire(\n      'Error!',\n      'Invaild URL',\n      'error'\n    ) )\n    } \n\n    onRouteChange = (route) => {\n      this.setState( {route})\n    }\n  \n  render() {\n    return(\n    <React.Fragment>\n      <Particles className='particles' params={particlesOptions}/>\n      <Navigation onRouteChange = {this.onRouteChange}/>\n        {this.state.route === 'home' ?\n        (<React.Fragment>\n          <Logo />\n          <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n          <FaceRecognition box={this.state.box} imageUrl = {this.state.imageUrl} />\n        </React.Fragment>)\n         : \n         this.state.route === 'signin' ? <Signin onRouteChange= {this.onRouteChange}/> : (<Register onRouteChange= {this.onRouteChange}/>)\n         \n         \n         \n         \n         })\n        }\n    </React.Fragment>\n  \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}