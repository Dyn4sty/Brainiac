{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","particlesOptions.js","components/Signin/Signin.js","components/Register/Register.js","firebase/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","handleOnDrop","progress","progress_show","acceptedFileTypes","imageMaxSize","resize","placeholder","type","onChange","id","backgroundColor","accept","multiple","maxSize","onDrop","getRootProps","getInputProps","value","FaceRecognition","imageUrl","box","href","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","Signin","htmlFor","name","required","Register","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","acceptedFileTypesArray","split","map","item","trim","app","Clarifai","App","verifyFile","files","length","currentFile","currentFileType","currentFileSize","size","Swal","fire","includes","rejectedFiles","image","setState","document","getElementById","disabled","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","SendRequest","state","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","event","input","target","input_field","isUrlValid","file","custom_error","models","predict","FACE_DETECT_MODEL","response","catch","err","route","progess_show","userInput","match","this","Fragment","params","React","Component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69c4ca7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.6afe8ffa.png\";","import React from 'react'\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if (isSignedIn) {\r\n        return( \r\n        <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className=\"f3-l link dib pa3 ph4-l pointer black-80 \" onClick= { () => onRouteChange('signout') }> Sign Out</p>\r\n            </nav>\r\n        </div>)\r\n    }\r\n    else {\r\n        return (\r\n        <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className=\"f3-l link dib pa3 ph4-l pointer black-80 \" onClick= { () => onRouteChange('signin') }> Sign in</p>\r\n                <p className=\"f3-l link dib pa3 ph4-l pointer black-80 \" onClick= { () => onRouteChange('register') }> Register</p>\r\n            </nav>\r\n        </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0 center'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 70 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3 \">\r\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit, handleOnDrop ,progress, progress_show, acceptedFileTypes, imageMaxSize}) => {\r\nif (progress_show) {\r\n    return(\r\n      <div>\r\n      <p className='f3 center'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='center ma2 pa4 br3 shadow-5' style={{width: '800px'}}>\r\n        \r\n        <textarea style={{resize: 'none'}} className='center pa1 w-70 ' placeholder='https://www.example.com/images/dinosaur.jpg' type='text' onChange = {onInputChange}></textarea>\r\n        <button id = 'detect'\r\n          className='w-30 grow f4 link ph3 pv2 dib white'\r\n          style={{backgroundColor: '#f7797d'}}\r\n          onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div>\r\n      <Dropzone accept={acceptedFileTypes} multiple={false} maxSize={imageMaxSize} onDrop={handleOnDrop}>\r\n    {({getRootProps, getInputProps}) => (\r\n      <section>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} /><br></br>\r\n          <label id='drag' className='center ma2 shadow-5' >Drag 'n' drop some files here, or click to select files</label>\r\n        </div>\r\n      </section>\r\n    )}\r\n  </Dropzone>\r\n      <progress className='progress' value={progress} max=\"100\"/><br/>  \r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <p className='f3 center'>\r\n      {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n      </p>\r\n    <div className='center'>\r\n      <div className='center ma2 pa4 br3 shadow-5' style={{width: '800px'}}>\r\n      \r\n        <textarea style={{resize: 'none'}} className='center pa1 w-70 ' placeholder='https://www.example.com/images/dinosaur.jpg' type='text' onChange = {onInputChange}></textarea>\r\n        <button id = 'detect'\r\n          className='w-30 grow f4 link ph3 pv2 dib white'\r\n          style={{backgroundColor: '#f7797d'}}\r\n          onClick={onButtonSubmit}>Detect</button>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n    <Dropzone accept={acceptedFileTypes} multiple={false} maxSize={imageMaxSize} onDrop={handleOnDrop}>\r\n    {({getRootProps, getInputProps}) => (\r\n      <section>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} /><br></br>\r\n          <label id='drag' className='center ma2 shadow-5' >Drag 'n' drop some files here, or click to select files</label>\r\n        </div>\r\n      </section>\r\n    )}\r\n  </Dropzone>\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <a href={imageUrl}><img id='inputimage' alt='' src={imageUrl || 'https://via.placeholder.com/500x300?text=Brainiac+Face+Detect'} width='500' height='auto'/></a>\r\n        <div className='bounding-box'  style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","const particlesOptions = {\r\n    particles: {\r\n      \"number\": {\r\n        \"value\": 150,\r\n        \"density\": {\r\n            \"enable\": true,\r\n            \"value_area\": 1803.4120608655228\r\n        }\r\n    },\r\n    \"color\": {\r\n        \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n            \"width\": 2,\r\n            \"color\": \"#fffff\"\r\n        },\r\n        \"polygon\": {\r\n            \"nb_sides\": 4\r\n        },\r\n        \"image\": {\r\n            \"src\": \"img/github.svg\",\r\n            \"width\": 100,\r\n            \"height\": 100\r\n        }\r\n    },\r\n    \"opacity\": {\r\n        \"value\": 0.4008530152163807,\r\n        \"random\": false,\r\n        \"anim\": {\r\n            \"enable\": false,\r\n            \"speed\": 1,\r\n            \"opacity_min\": 0.1,\r\n            \"sync\": false\r\n        }\r\n    },\r\n    \"size\": {\r\n        \"value\": 1.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n            \"enable\": false,\r\n            \"speed\": 40,\r\n            \"size_min\": 0.1,\r\n            \"sync\": false\r\n        }\r\n    },\r\n    \"line_linked\": {\r\n        \"enable\": true,\r\n        \"distance\": 0,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.3687847739990702,\r\n        \"width\": 0.6413648243462091\r\n    },\r\n    \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 6,\r\n        \"direction\": \"none\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n            \"enable\": false,\r\n            \"rotateX\": 600,\r\n            \"rotateY\": 1200\r\n        }\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"window\",\r\n    \"events\": {\r\n        \"onhover\": {\r\n            \"enable\": true,\r\n            \"mode\": \"repulse\"\r\n        },\r\n        \"onclick\": {\r\n            \"enable\": false,\r\n            \"mode\": \"bubble\"\r\n        },\r\n        \"resize\": true\r\n    },\r\n    \"modes\": {\r\n        \"grab\": {\r\n            \"distance\": 400,\r\n            \"line_linked\": {\r\n                \"opacity\": 1\r\n            }\r\n        },\r\n        \"bubble\": {\r\n            \"distance\": 400,\r\n            \"size\": 40,\r\n            \"duration\": 2,\r\n            \"opacity\": 8,\r\n            \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n            \"distance\": 100,\r\n            \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n            \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n            \"particles_nb\": 2\r\n        }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n  }\r\n\r\nexport default particlesOptions","import React from 'react'\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n    return(\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n              <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                  <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                  <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input \r\n                        className=\"pa2 ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\" required/>\r\n                  </div>\r\n                  <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\" required/>\r\n                  </div>\r\n                </fieldset>\r\n                <div className=\"center\">\r\n                  <input\r\n                  onClick= { () => onRouteChange('home') }\r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                  type=\"submit\" \r\n                  value=\"Sign in\"/>\r\n                </div>\r\n                <div className=\"lh-copy mt3 center\">\r\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n              </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\n\r\nexport default Signin","import React from 'react'\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return(\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              onClick = {() => onRouteChange('home')}\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"Register\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Register","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyD2_Ww5mf2mEskOQMa6IYVK6URF9GqMbUE\",\r\n    authDomain: \"quickstart-1571266618401.firebaseapp.com\",\r\n    databaseURL: \"https://quickstart-1571266618401.firebaseio.com\",\r\n    projectId: \"quickstart-1571266618401\",\r\n    storageBucket: \"quickstart-1571266618401.appspot.com\",\r\n    messagingSenderId: \"496997080126\",\r\n    appId: \"1:496997080126:web:8caa4fb9ce5e4204df456f\",\r\n    measurementId: \"G-72E4NBCF0G\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport {\r\n    storage, firebase as default\r\n}","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\nimport Swal from 'sweetalert2'\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport particlesOptions from './particlesOptions'\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport {storage} from './firebase';\n\nconst imageMaxSize = 10000000// bytes\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {return item.trim()})\n\nconst app = new Clarifai.App({\n  apiKey: '165546baa7c245d68b76d4bb42ab8a01'\n });\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      image: null,\n      progress: 0,\n      progess_show: false\n\n    }\n\n  }\n\n\n  verifyFile = (files) => {\n    if (files && files.length > 0){\n        const currentFile = files[0]\n        const currentFileType = currentFile.type\n        const currentFileSize = currentFile.size\n        if(currentFileSize > imageMaxSize) {\n          Swal.fire('Error!',`This file is not allowed. ${currentFileSize} bytes is too larg`,'error')\n            return false\n        }\n        if (!acceptedFileTypesArray.includes(currentFileType)){\n            Swal.fire('Error!','This file is not allowed. Only images are allowed.','error')\n            return false\n        }\n        return true\n    }\n}\n\n  handleOnDrop = (files, rejectedFiles) => {\n    if (rejectedFiles && rejectedFiles.length > 0){\n        this.verifyFile(rejectedFiles)\n    }\n\n\n    if (files && files.length > 0){\n         const isVerified = this.verifyFile(files)\n         if (isVerified){\n             const image = files[0]\n             this.setState({progress_show: true})\n             document.getElementById(\"detect\").disabled = true\n             const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on('state_changed', \n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({progress});\n      }, \n      (error) => {\n\n        console.log(error);\n      }, \n      () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(imageUrl => {\n          document.getElementById(\"detect\").disabled = false\n            this.setState({imageUrl})\n            this.SendRequest(this.state.imageUrl,'Bad Image')\n        })\n        this.setState({image: null})\n    });\n             \n         }\n    }\n}\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  }\n\n  displayFaceBox = (box) => {\n    this.setState( {box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  isUrlValid(userInput) {\n    var res = userInput.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\n    if(res == null)\n        return false;\n    else\n        return true;\n  } \n\n  onButtonSubmit = () => {\n    this.setState({progress_show: false})\n    const input_field =  this.state.input\n    //let patt = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n    //let match = input_field.match();\n\n    if(!this.isUrlValid(input_field)) {\n      Swal.fire(\n        'Error!',\n        'Bad Image URL',\n        'error'\n      )\n      return false; \n    }\n    this.SendRequest(this.state.input,'Could not process image')\n    this.setState( {imageUrl: this.state.input} )\n  } \n\n  SendRequest = (file, custom_error) => {\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, file)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err=>  this.setState({progress_show: false}) + \n    this.setState({imageUrl: ''}) + Swal.fire(\n      'Error!',\n      custom_error,\n      'error'\n    ) )\n  }\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n\n    \n  render() {\n    const { isSignedIn, imageUrl, route, box, progress, progress_show} = this.state;\n    return(\n    <React.Fragment>\n      <Particles className='particles' params={particlesOptions}/>\n      \n      <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange}/>\n        {route === 'home' ?\n        (<React.Fragment>\n          <Logo />\n          <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit} \n          progress = {progress} progress_show = {progress_show} handleOnDrop= {this.handleOnDrop}\n          imageMaxSize = {imageMaxSize} acceptedFileTypes = {acceptedFileTypes}\n           />\n          <FaceRecognition box={box} imageUrl = {imageUrl} />\n          \n        </React.Fragment>)\n        : \n         route === 'signin' ? <Signin onRouteChange= {this.onRouteChange}/> : (<Register onRouteChange= {this.onRouteChange}/>)\n         }\n        \n    </React.Fragment>\n  \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}