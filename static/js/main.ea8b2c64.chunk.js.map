{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","style","display","justifyContent","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","backgroundColor","onClick","FaceRecognition","imageUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","value","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","Fragment","params","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea8b2c64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.6afe8ffa.png\";","import React from 'react'\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n    return(\r\n        <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className=\"f3-l link dib pa3 ph4-l pointer black-80 hover-bg-light-pink\"> Sign Out</p>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0 center'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 70 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3 \">\r\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit}) => {\r\n  return (\r\n    <div>\r\n      <p className='f3 center'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='center ma2 pa4 br3 shadow-5' style={{width: '800px'}}>\r\n          <input className='f4 center pa2 w-70 ' type='text' onChange = {onInputChange} />\r\n          <button\r\n            className='w-30 grow f4 link ph3 pv2 dib white'\r\n            style={{backgroundColor: '#f7797d'}}\r\n            onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Clarifai from 'clarifai'  \nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\n\nconst particlesOptions = {\n  particles: {\n    \"number\": {\n      \"value\": 150,\n      \"density\": {\n          \"enable\": true,\n          \"value_area\": 1803.4120608655228\n      }\n  },\n  \"color\": {\n      \"value\": \"#ffffff\"\n  },\n  \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n          \"width\": 2,\n          \"color\": \"#fffff\"\n      },\n      \"polygon\": {\n          \"nb_sides\": 4\n      },\n      \"image\": {\n          \"src\": \"img/github.svg\",\n          \"width\": 100,\n          \"height\": 100\n      }\n  },\n  \"opacity\": {\n      \"value\": 0.4008530152163807,\n      \"random\": false,\n      \"anim\": {\n          \"enable\": false,\n          \"speed\": 1,\n          \"opacity_min\": 0.1,\n          \"sync\": false\n      }\n  },\n  \"size\": {\n      \"value\": 1.5,\n      \"random\": true,\n      \"anim\": {\n          \"enable\": false,\n          \"speed\": 40,\n          \"size_min\": 0.1,\n          \"sync\": false\n      }\n  },\n  \"line_linked\": {\n      \"enable\": true,\n      \"distance\": 0,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.3687847739990702,\n      \"width\": 0.6413648243462091\n  },\n  \"move\": {\n      \"enable\": true,\n      \"speed\": 6,\n      \"direction\": \"none\",\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n          \"enable\": false,\n          \"rotateX\": 600,\n          \"rotateY\": 1200\n      }\n  }\n},\n\"interactivity\": {\n  \"detect_on\": \"window\",\n  \"events\": {\n      \"onhover\": {\n          \"enable\": true,\n          \"mode\": \"repulse\"\n      },\n      \"onclick\": {\n          \"enable\": false,\n          \"mode\": \"bubble\"\n      },\n      \"resize\": true\n  },\n  \"modes\": {\n      \"grab\": {\n          \"distance\": 400,\n          \"line_linked\": {\n              \"opacity\": 1\n          }\n      },\n      \"bubble\": {\n          \"distance\": 400,\n          \"size\": 40,\n          \"duration\": 2,\n          \"opacity\": 8,\n          \"speed\": 3\n      },\n      \"repulse\": {\n          \"distance\": 100,\n          \"duration\": 0.4\n      },\n      \"push\": {\n          \"particles_nb\": 4\n      },\n      \"remove\": {\n          \"particles_nb\": 2\n      }\n  }\n},\n\"retina_detect\": true\n}\n\nconst app = new Clarifai.App({\n  apiKey: '165546baa7c245d68b76d4bb42ab8a01'\n });\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n\n    }\n  }\n  calculateFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState( {box: box })\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n  onButtonSubmit = () => {\n    this.setState( {imageUrl: this.state.input} )\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err=> console.log(err))\n    } \n\n  \n  \n  render() {\n    return(\n      <React.Fragment>\n      <Particles className='particles' \n      params={particlesOptions}/>\n        <Navigation />\n        <Logo />\n        <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n        <FaceRecognition box={this.state.box} imageUrl = {this.state.imageUrl} />\n      </React.Fragment>\n  \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}